services:
  # Nginx
  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: hm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt 
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
  
  # HTTPS
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: hm-certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt 
      - ./data/certbot/www:/var/www/certbot

  # 백엔드
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: hm-backend
    ports:
      - "8081:8081"
    environment:
      # SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/honeymorning?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ssafy
      SPRING_DATASOURCE_PASSWORD: ssafy
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JWT_REDIS_HOST: redis
      SPRING_JWT_PORT: 6379
    depends_on:
      - mysql
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 프론트엔드
  frontend:
    build:
      context: ./FE/honey-morning
      dockerfile: Dockerfile
    container_name: hm-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: hm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ssafy
      MYSQL_DATABASE: honeymorning
      MYSQL_USER: ssafy
      MYSQL_PASSWORD: ssafy
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # Redis 데이터베이스
  redis:
    image: redis:latest
    container_name: hm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

# 사용하는 볼륨들
volumes:
  mysql_data:
  redis_data:
